<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  
	<modelVersion>4.0.0</modelVersion>
	<groupId>es.coremain</groupId>
	<artifactId>coremainWeb</artifactId>
	<name>coremainWeb</name>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	<description>Esqueleto de aplicación web J2EE orientado al desarrollo ágil</description>
	<url>http://www.coremain.com</url>

	<developers>
		<developer>
			<name>Marcos Casal Santos</name>
			<email>marcos.casal@coremain.com</email>
			<organization>Coremain S.L.U</organization>
		</developer>
	</developers>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java-version>1.7</java-version>
		<primefaces-version>3.4.RC1</primefaces-version>
	</properties>
  	  	
	<repositories>  	
		<!-- Para los componentes de PRIMEFACES -->
		<repository>
			<id>prime-repo</id>
			<name>PrimeFaces Maven Repository</name>
			<url>http://repository.primefaces.org</url>
			<layout>default</layout>
		</repository>
		
		<!-- spring-security taglibs para facelets -->
		<!-- Permiten integrar los taglibs de spring security con las páginas xhtml de facelets -->
		<repository>
			<id>org.springframework.security.taglibs.facelets</id>
			<url>http://spring-security-facelets-taglib.googlecode.com/svn/repo/</url>
		</repository>		
		
		<!-- The follow repositories allow embedding of Tomcat 7  (javaNetGlassfish, javaNet2, ObjectWeb)-->
		<!-- Because Maven Central repository is slow at getting the latest JSP 
			servlet, jstl, and other apis -->
		<!-- 
		<repository>
			<id>javaNetGlassfish</id>
			<name>java.net Glassfish Maven Repository</name>
			<url>http://download.java.net/maven/glassfish/</url>
			<layout>default</layout>
		</repository>
		<repository>
			<id>javaNet2</id>
			<name>java.net Maven 2 Repository</name>
			<url>http://download.java.net/maven/2/</url>
			<layout>default</layout>
		</repository>
		<repository>
			<id>ObjectWeb</id>
			<name>ow2.org</name>
			<url>http://maven.ow2.org/maven2/</url>
			<layout>default</layout>
		</repository>
		 -->		
				
	</repositories>		
	   
  <dependencies>
  
  	<!-- Implementación de Apache de JSF 2 -->
    <dependency>
    	<groupId>org.apache.myfaces.core</groupId>
    	<artifactId>myfaces-impl</artifactId>
    	<version>2.1.5</version>
    	<type>jar</type>
    	<scope>compile</scope>
    </dependency>  
    
	<!-- spring-security taglibs para facelets -->    
    <dependency>
    	<groupId>org.springframework.security</groupId>
    	<artifactId>facelets-taglib-jsf20-spring-3</artifactId>
    	<version>0.5</version>
    </dependency>    
  
  	<!-- Conjunto de componentes para JSF2-->
	<dependency>
		<groupId>org.primefaces</groupId>
		<artifactId>primefaces</artifactId>
		<version>${primefaces-version}</version>
	</dependency>  
  
  	<!-- Conjunto de css js e imágenes que componen el tema "Cupertino" usado en la aplicacion -->
  	<!-- 
	<dependency>  
		<groupId>org.primefaces.themes</groupId>  
		<artifactId>cupertino</artifactId>  
		<version>1.0.2</version>  
	</dependency>  
    -->
   
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
                
                
	<!-- la librería jstl se usa para funciones javascript ej. fn:length-->
    <dependency>
    	<groupId>javax.servlet</groupId>
    	<artifactId>jstl</artifactId>
    	<version>1.2</version>
    	<type>jar</type>
    </dependency>
                 
    <dependency>
    	<groupId>es.coremain</groupId>
    	<artifactId>coremainUserService</artifactId>
    	<version>0.0.1-SNAPSHOT</version>
    	<type>jar</type>
    	<scope>compile</scope>
    </dependency>
    
    <dependency>
    	<groupId>es.coremain</groupId>
    	<artifactId>coremainTerritoryService</artifactId>
    	<version>0.0.1-SNAPSHOT</version>
    	<type>jar</type>
    	<scope>compile</scope>
    </dependency>
        
	<!-- The follow dependencies (tomcat-catalina, tomcat-embed-jasper) 
	allow embedding of Tomcat 7 -->
	<!-- 
	<dependency>
		<groupId>org.apache.tomcat</groupId>
		<artifactId>tomcat-catalina</artifactId>
		<version>7.0.23</version>
		<type>jar</type>
		<scope>compile</scope>
	</dependency>
	<dependency>
		<groupId>org.apache.tomcat.embed</groupId>
		<artifactId>tomcat-embed-jasper</artifactId>
		<version>7.0.23</version>
		<type>jar</type>
		<scope>compile</scope>
	</dependency>
	 -->
	 	 
	<!-- Dependency org.apache.poi is needed to support primefaces excel export feature -->
    <dependency>
    	<groupId>org.apache.poi</groupId>
    	<artifactId>poi</artifactId>
    	<version>3.7</version>
    	<type>jar</type>
    	<scope>compile</scope>
    </dependency>
    
    <!-- Dependency com.lowagie is needed to support primefaces PDF export feature -->
    <!-- FIXME: itext no codifica bien los carácteres en UTF-8 por lo que en el componente 
    	p:dataExporter de primefaces se debe fijar la propiedadad encoding="ISO8859-1"
    	para que codifique bien los carácteres como tildes eñes.. etc -->
    <dependency>
    	<groupId>com.lowagie</groupId>
    	<artifactId>itext</artifactId>
    	<version>2.1.7</version>
    	<type>jar</type>
    	<scope>compile</scope>
    </dependency>
    <dependency>
    	<groupId>javax.servlet</groupId>
    	<artifactId>jstl</artifactId>
    	<version>1.2</version>
    	<type>jar</type>
    	<scope>compile</scope>
    </dependency>
    <dependency>
    	<groupId>es.uvigo.esei.pfc</groupId>
    	<artifactId>eseiPfcProjectService</artifactId>
    	<version>0.0.1-SNAPSHOT</version>
    </dependency>
    <dependency>
    	<groupId>org.primefaces.themes</groupId>
    	<artifactId>aristo</artifactId>
    	<version>1.0.1</version>
    </dependency>
  </dependencies>
  
  <organization>
  	<name>Coremain</name>
  	<url>http://www.coremain.com</url>
  </organization>
  
  <build>
    <finalName>coremainWeb</finalName>

	<plugins>

		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-compiler-plugin</artifactId>
			<version>2.3.2</version>
			<configuration>
				<source>${java-version}</source>
				<target>${java-version}</target>
				<encoding>UTF-8</encoding>
			</configuration>
		</plugin>
		
		<!-- Establece UTF-8 en la configuración de todos los plugins que aceptan la asignación de encoding  -->
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-resources-plugin</artifactId>
			<configuration>
				<encoding>UTF-8</encoding>
			</configuration>
		</plugin>
		
		<!-- Establece UTF-8 en la configuración de todos los plugins que aceptan la asignación de encoding  -->
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-site-plugin</artifactId>
			<configuration>
				<inputEncoding>UTF-8</inputEncoding>
				<outputEncoding>UTF-8</outputEncoding>
			</configuration>
		</plugin>
						
		<!-- This allow embedding of Tomcat 7 -->
		<!-- All code is Copyright 2011 Rodney Beede  -->
		<!-- http://www.rodneybeede.com/Embedding_Tomcat_7_in_a_war_file.html -->
		<!-- Añade el atributo de manifiesto principal en el war -->
		<!-- 
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-shade-plugin</artifactId>
			<version>1.4</version>
			<executions>
				<execution>
					<phase>package</phase>
					<goals>
						<goal>shade</goal>
					</goals>
					<configuration>
						<createDependencyReducedPom>true</createDependencyReducedPom>
						<transformers>
							<transformer
								implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
								<mainClass>EmbeddedTomcatMain</mainClass>
							</transformer>
						</transformers>
					</configuration>
				</execution>
			</executions>
		</plugin>
		 -->
			
		<!-- This allow embedding of Tomcat 7 -->			
		<!-- The main class needs to be in the root of the war in order to be runnable -->
		<!-- Mueve la main-class para que se localice al arrancar el war -->
		<!-- 
		<plugin>
			<artifactId>maven-antrun-plugin</artifactId>
			<executions>
				<execution>
					<id>move-main-class</id>
					<phase>compile</phase>
					<configuration>
						<tasks>
							<move todir="${project.build.directory}/${project.artifactId}">
								<fileset dir="${project.build.directory}/classes/">
									<include name="EmbeddedTomcatMain.class" />
								</fileset>
							</move>
						</tasks>
					</configuration>
					<goals>
						<goal>run</goal>
					</goals>
				</execution>
			</executions>
		</plugin>
		 -->		

	</plugins>
  </build>
  
  <!-- TODO: Crear un script de maven que compile y refresque las dependencias de coremainWeb automáticamente-->
  <!-- TODO: Añadir tras la compilación la ejección de los test unitarios -->
  <!-- TODO: Añadir tras la ejecución satisfactoria de los test unitarios los test de integración, analizar el uso de HUDSON para esto -->
      
</project>
